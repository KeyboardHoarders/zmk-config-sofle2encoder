/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Encoders
&sensors { triggers-per-rotation = <30>; };
&left_encoder { steps = <30>; };
&right_encoder { steps = <30>; };

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower
    conditional_layers { compatible = "zmk,conditional-layers"; };
    combos { compatible = "zmk,combos"; };
    
    behaviors {
        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <POUND MINUS BACKSPACE UNDERSCORE>;
        };

        // Inverted number behaviors with smart modifier handling
        inv_n1: inv_n1 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_1";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp N1>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        inv_n2: inv_n2 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_2";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp N2>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        inv_n3: inv_n3 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_3";
            #binding-cells = <0>;
            bindings = <&kp HASH>, <&kp N3>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        inv_n4: inv_n4 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_4";
            #binding-cells = <0>;
            bindings = <&kp DLLR>, <&kp N4>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        inv_n5: inv_n5 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_5";
            #binding-cells = <0>;
            bindings = <&kp PRCNT>, <&kp N5>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        inv_n6: inv_n6 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_6";
            #binding-cells = <0>;
            bindings = <&kp CARET>, <&kp N6>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        inv_n7: inv_n7 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_7";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp N7>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        inv_n8: inv_n8 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_8";
            #binding-cells = <0>;
            bindings = <&kp ASTRK>, <&kp N8>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        inv_n9: inv_n9 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_9";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp N9>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        inv_n0: inv_n0 {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERTED_0";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&kp N0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            display-name = "Base";
            // ------------------------------------------------------------------------------------------------------------
            // |   ESC |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   -   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
            // |   =   |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   "   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |  F2   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | CTRL|  `   | WIN  |  [   | SPACE  |  | BKSPC |  ]   |  UP   | DOWN  | ENTER|
            bindings = <
&kp ESCAPE      &inv_n1  &inv_n2    &inv_n3    &inv_n4   &inv_n5                                        &inv_n6            &inv_n7       &inv_n8         &inv_n9       &inv_n0   &kp MINUS
&kp TAB         &kp Q    &kp W      &kp E      &kp R     &kp T                                          &kp Y              &kp U         &kp I           &kp O         &kp P     &kp BACKSLASH
&kp EQUAL       &kp A    &kp S      &kp D      &kp F     &kp G                                          &kp H              &kp J         &kp K           &kp L         &kp SEMI  &kp DOUBLE_QUOTES
&kp LEFT_SHIFT  &kp Z    &kp X      &kp C      &kp V     &kp B             &kp C_MUTE    &kp F2         &kp N              &kp M         &kp COMMA       &kp DOT       &kp FSLH  &kp RSHFT
                         &kp LCTRL  &kp GRAVE  &kp LWIN  &kp LEFT_BRACKET  &kp SPACE     &kp BACKSPACE  &kp RIGHT_BRACKET  &kp UP_ARROW  &kp DOWN_ARROW  &kp KP_ENTER
            >;
            
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&inc_dec_kp LEFT RIGHT_ARROW>;
        };
    };
};
